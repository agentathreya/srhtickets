trigger:
  branches:
    include:
      - main
    paths:
      exclude:
        - README.md
        - .gitignore

variables:
  npm_config_cache: $(Pipeline.Workspace)/.npm
  CI: true

stages:
  - stage: Build
    displayName: 'Build and Test'
    jobs:
      - job: Build_Job
        displayName: 'Build Application'
        pool:
          vmImage: 'ubuntu-latest'
        
        steps:
          # Checkout code
          - checkout: self
            clean: true
            
          # Setup Node.js
          - task: NodeTool@0
            displayName: 'Install Node.js'
            inputs:
              versionSpec: '18.x'
              
          # Cache node_modules for faster builds
          - task: Cache@2
            displayName: 'Cache npm dependencies'
            inputs:
              key: 'npm | "$(Agent.OS)" | package-lock.json'
              restoreKeys: |
                npm | "$(Agent.OS)"
              path: $(npm_config_cache)
              
          # Install dependencies
          - script: npm ci
            displayName: 'npm ci'
            
          # Build the application
          - script: npm run build
            displayName: 'Build production app'
            
          # Run tests (if you have them)
          - script: npm test
            displayName: 'Run tests'
            condition: always()
            
          # Publish build artifacts
          - task: PublishPipelineArtifact@1
            displayName: 'Publish build artifacts'
            inputs:
              targetPath: 'dist'
              artifact: 'srhtickets-app'
              publishLocation: 'pipeline'

  - stage: Deploy
    displayName: 'Deploy to Azure Storage'
    dependsOn: Build
    condition: succeeded()
    jobs:
      - job: Deploy_Job
        displayName: 'Deploy Static Site'
        pool:
          vmImage: 'ubuntu-latest'
          
        steps:
          # Download the artifact
          - task: DownloadPipelineArtifact@2
            displayName: 'Download build artifacts'
            inputs:
              artifact: 'srhtickets-app'
              path: '$(Pipeline.Workspace)/srhtickets-app'
              
          # Deploy to Azure Storage static website
          - task: AzureFileCopy@4
            displayName: 'Deploy to Azure Storage'
            inputs:
              SourcePath: '$(Pipeline.Workspace)/srhtickets-app'
              azureSubscription: 'Your-Azure-Service-Connection'
              Destination: 'AzureBlob'
              storage: 'yourstorageaccount'
              ContainerName: '$web'
              BlobPrefix: 'srhtickets'